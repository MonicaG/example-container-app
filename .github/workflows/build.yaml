name: Build Image

env:
  REGISTRY: ghcr.io
  REPOSITORY_NAME: monicag/example-container-app/app

on:
    workflow_call:
     
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY_NAME }}
          # Always generate latest tag (https://github.com/docker/metadata-action#latest-tag)
          flavor: latest=true
          # Sha tag is used in udpate_deploy_file job below 
          tags: |
            type=sha
            type=ref,event=pr 
            type=raw,value=${{github.ref_name}}
          labels: |
            org.opencontainers.image.ref.name=${{github.ref_name}}
            org.opencontainers.image.source=${{github.repositoryUrl}}
            org.opencontainers.image.description="Build from ${{github.ref_name}}"

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - # Support for multiplatform build. Using for dev debugging
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - # allows for caching
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

        
      - name: Build container
        uses: docker/build-push-action@v6
        env:
          CACHE_TAG: buildcache
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }} 
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.REPOSITORY_NAME }}:${{ env.CACHE_TAG }}
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.REPOSITORY_NAME }}:${{ env.CACHE_TAG }},mode=max
          labels: |
            org.opencontainers.image.ref.name=${{github.ref_name}}
            org.opencontainers.image.source=${{github.repositoryUrl}}
            org.opencontainers.image.description="Build from ${{github.ref_name}}"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: '${{ env.REGISTRY }}/${{ env.REPOSITORY_NAME }}:${{ steps.meta.outputs.version }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
